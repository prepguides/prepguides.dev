{
  "version": "1.0.0",
  "lastUpdated": "2025-01-27",
  "categories": {
    "kubernetes": {
      "name": "Kubernetes",
      "icon": "‚ò∏Ô∏è",
      "description": "Container orchestration and microservices architecture",
      "color": {
        "primary": "#3b82f6",
        "secondary": "#1d4ed8"
      },
      "subtopics": {
        "request-flow": {
          "name": "Request Flow",
          "description": "Understanding how requests flow through Kubernetes",
          "content": [
            {
              "id": "k8s-request-flow",
              "title": "Kubernetes Request Flow",
              "description": "Interactive visualization of request flow through K8s components",
              "type": "visualization",
              "path": "kubernetes/request-flow.html",
              "addedDate": "2025-01-20",
              "status": "active"
            }
          ]
        }
      }
    },
    "algorithms": {
      "name": "Algorithms",
      "icon": "üî¢",
      "description": "Interactive algorithm visualizations for technical interview preparation",
      "color": {
        "primary": "#8b5cf6",
        "secondary": "#a855f7"
      },
      "subtopics": {
        "sorting": {
          "name": "Sorting Algorithms",
          "description": "Visualizations of various sorting algorithms",
          "content": [
            {
              "id": "sorting-algorithms",
              "title": "Sorting Algorithms",
              "description": "Master 6 essential sorting algorithms with step-by-step visualizations and performance comparisons",
              "type": "visualization",
              "path": "algorithms/sorting.html",
              "addedDate": "2025-01-15",
              "status": "active",
              "features": [
                "Bubble, Selection, Insertion, Merge, Quick, Heap Sort",
                "Real-time performance metrics and comparisons",
                "Interactive array manipulation and sorting",
                "Time complexity analysis (O(n¬≤) to O(n log n))"
              ],
              "jsFile": "algorithms/code/sorting-visualizer.js"
            }
          ]
        },
        "trees": {
          "name": "Tree Structures",
          "description": "Binary trees, BSTs, and tree traversal algorithms",
          "content": [
            {
              "id": "binary-search-tree",
              "title": "Binary Search Tree",
              "description": "Complete BST operations with explicit left/right positioning and traversal animations",
              "type": "visualization",
              "path": "algorithms/binary-search-tree.html",
              "addedDate": "2025-01-15",
              "status": "active",
              "features": [
                "Insert, Delete, Search with color-coded animations",
                "Inorder, Preorder, Postorder, Level-order traversals",
                "Explicit left/right child positioning",
                "Random tree generation with BST validation"
              ],
              "jsFile": "algorithms/code/bst-visualizer.js"
            }
          ]
        },
        "graph-traversal": {
          "name": "Graph Traversal",
          "description": "BFS, DFS, and graph algorithms",
          "content": [
            {
              "id": "bfs-dfs-graph-traversal",
              "title": "BFS/DFS Graph Traversal",
              "description": "Master graph traversal algorithms with interactive node-by-node exploration",
              "type": "visualization",
              "path": "algorithms/bfs-dfs-graph-traversal.html",
              "addedDate": "2025-01-15",
              "status": "active",
              "features": [
                "Breadth-First Search (BFS) with queue visualization",
                "Depth-First Search (DFS) with stack visualization",
                "Interactive graph creation and manipulation",
                "Path finding and shortest path algorithms"
              ],
              "jsFile": "algorithms/code/graph-traversal-visualizer.js"
            }
          ]
        },
        "trie-operations": {
          "name": "Trie Operations",
          "description": "Prefix tree data structure operations",
          "content": [
            {
              "id": "trie-operations",
              "title": "Trie Operations",
              "description": "Master the prefix tree data structure with dynamic string operations and autocomplete simulation",
              "type": "visualization",
              "path": "algorithms/trie-operations.html",
              "addedDate": "2025-01-15",
              "status": "active",
              "features": [
                "Insert, Search, Delete with character-by-character animation",
                "Prefix matching and autocomplete functionality",
                "Dynamic trie construction and visualization",
                "String manipulation and word suggestions"
              ],
              "jsFile": "algorithms/code/trie-visualizer.js"
            }
          ]
        },
        "shortest-path": {
          "name": "Shortest Path",
          "description": "Dijkstra's algorithm and path finding",
          "content": [
            {
              "id": "dijkstra-algorithm",
              "title": "Dijkstra's Algorithm",
              "description": "Find shortest paths in weighted graphs with priority queue visualization and distance tracking",
              "type": "visualization",
              "path": "algorithms/dijkstra-algorithm.html",
              "addedDate": "2025-01-15",
              "status": "active",
              "features": [
                "Step-by-step shortest path calculation",
                "Priority queue and distance array visualization",
                "Interactive weighted graph creation",
                "Path reconstruction and cost analysis"
              ],
              "jsFile": "algorithms/code/dijkstra-visualizer.js"
            }
          ]
        },
        "dynamic-programming": {
          "name": "Dynamic Programming",
          "description": "DP problems and memoization techniques",
          "content": [
            {
              "id": "dynamic-programming",
              "title": "Dynamic Programming",
              "description": "Solve classic DP problems with memoization tables and optimal substructure visualization",
              "type": "visualization",
              "path": "algorithms/dynamic-programming.html",
              "addedDate": "2025-01-15",
              "status": "active",
              "features": [
                "0/1 Knapsack with weight-value optimization",
                "Longest Common Subsequence (LCS) with table filling",
                "Memoization vs Tabulation comparison",
                "Optimal substructure and overlapping subproblems"
              ],
              "jsFile": "algorithms/code/dp-visualizer.js"
            }
          ]
        },
        "heap-operations": {
          "name": "Heap Operations",
          "description": "Binary heap data structure operations",
          "content": [
            {
              "id": "binary-heap-operations",
              "title": "Binary Heap Operations",
              "description": "Master priority queue operations with heap property maintenance and array-based visualization",
              "type": "visualization",
              "path": "algorithms/binary-heap.html",
              "addedDate": "2025-01-27",
              "status": "active",
              "features": [
                "Min/Max heap with insert, extract, and heapify",
                "Array-based heap representation and tree visualization",
                "Priority queue operations and heap sort",
                "Heap property validation and bubble operations"
              ],
              "jsFile": "algorithms/code/heap-visualizer.js"
            }
          ]
        },
        "segment-tree": {
          "name": "Segment Tree",
          "description": "Range queries and tree construction",
          "content": [
            {
              "id": "segment-tree-operations",
              "title": "Segment Tree",
              "description": "Efficient range queries with O(log n) operations and dynamic tree construction",
              "type": "visualization",
              "path": "algorithms/segment-tree.html",
              "addedDate": "2025-01-27",
              "status": "active",
              "features": [
                "Range Sum, Min, Max queries with tree visualization",
                "Point updates and range update operations",
                "Interactive tree construction from arrays",
                "Efficient O(log n) query and update complexity"
              ],
              "jsFile": "algorithms/code/segment-tree-visualizer.js"
            }
          ]
        }
      }
    },
    "networking": {
      "name": "Networking",
      "icon": "üåê",
      "description": "OSI model, TCP/IP, and network protocols visualization",
      "color": {
        "primary": "#10b981",
        "secondary": "#059669"
      },
      "subtopics": {
        "osi-model": {
          "name": "OSI Model",
          "description": "Understanding the 7-layer OSI model",
          "content": [
            {
              "id": "osi-7-layer",
              "title": "OSI 7-Layer Model",
              "description": "Interactive visualization of the OSI model layers",
              "type": "visualization",
              "path": "networking/osi-model.html",
              "addedDate": "2025-01-18",
              "status": "active"
            }
          ]
        }
      }
    },
    "databases": {
      "name": "Databases",
      "icon": "üóÑÔ∏è",
      "description": "Database design, replication, and scaling patterns",
      "color": {
        "primary": "#f59e0b",
        "secondary": "#d97706"
      },
      "subtopics": {}
    },
    "microservices": {
      "name": "Microservices",
      "icon": "üèóÔ∏è",
      "description": "Service mesh, API gateways, and distributed systems",
      "color": {
        "primary": "#ef4444",
        "secondary": "#dc2626"
      },
      "subtopics": {}
    },
    "system-design": {
      "name": "System Design",
      "icon": "üèõÔ∏è",
      "description": "Scalability patterns, caching strategies, and architecture",
      "color": {
        "primary": "#6366f1",
        "secondary": "#4f46e5"
      },
      "subtopics": {
        "Concurrency patterns in Go": {
          "name": "Concurrency Patterns In Go",
          "description": "Concurrency patterns in Go",
          "content": [
            {
              "id": "system-design-go-patterns",
              "title": "Go Patterns",
              "description": "Concurrency patterns in Go",
              "type": "guide",
              "status": "pending",
              "repo": "prepguides/go-interviews",
              "path": "patterns/README.md",
              "addedDate": "2025-09-28"
            }
          ]
        }
      }
    }
  },
  "statistics": {
    "totalContent": 10,
    "totalVisualizations": 10,
    "totalGuides": 0,
    "categoriesWithContent": 4,
    "lastContentAdded": "2025-01-27"
  }
}